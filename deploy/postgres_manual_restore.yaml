---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - command:
        - backup-restore-sidecar
        - restore
        - "0"
        - --log-level=debug
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: POSTGRES_DB
              name: postgres
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres
        - name: PGDATA
          valueFrom:
            secretKeyRef:
              key: POSTGRES_DATA
              name: postgres
        image: postgres:16-alpine
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec
            - pg_isready
            - -U
            - postgres
            - -h
            - 127.0.0.1
            - -p
            - "5432"
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: postgres
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec
            - pg_isready
            - -U
            - postgres
            - -h
            - 127.0.0.1
            - -p
            - "5432"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /usr/local/bin/backup-restore-sidecar
          name: bin-provision
          subPath: backup-restore-sidecar
        - mountPath: /etc/backup-restore-sidecar
          name: backup-restore-sidecar-config
      - command:
        - backup-restore-sidecar
        - start
        - --log-level=debug
        env:
        - name: BACKUP_RESTORE_SIDECAR_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres
        - name: BACKUP_RESTORE_SIDECAR_POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: postgres
        image: postgres:16-alpine
        name: backup-restore-sidecar
        ports:
        - containerPort: 8000
          name: grpc
        resources: {}
        volumeMounts:
        - mountPath: /backup
          name: backup
        - mountPath: /data
          name: data
        - mountPath: /etc/backup-restore-sidecar
          name: backup-restore-sidecar-config
        - mountPath: /usr/local/bin/backup-restore-sidecar
          name: bin-provision
          subPath: backup-restore-sidecar
      initContainers:
      - command:
        - cp
        - /backup-restore-sidecar
        - /bin-provision
        image: ghcr.io/metal-stack/backup-restore-sidecar:latest
        imagePullPolicy: IfNotPresent
        name: backup-restore-sidecar-provider
        resources: {}
        volumeMounts:
        - mountPath: /bin-provision
          name: bin-provision
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
      - name: backup
        persistentVolumeClaim:
          claimName: backup
      - configMap:
          name: backup-restore-sidecar-config-postgres
        name: backup-restore-sidecar-config
      - emptyDir: {}
        name: bin-provision
  updateStrategy: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
    status: {}
  - metadata:
      name: backup
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
    status: {}
status:
  availableReplicas: 0
  replicas: 0
