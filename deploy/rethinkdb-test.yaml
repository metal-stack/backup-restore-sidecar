# DO NOT EDIT! This is auto-generated by the integration tests
---
data:
  config.yaml: |
    ---
    db: rethinkdb
    db-data-directory: /data/rethinkdb/
    backup-provider: local
    rethinkdb-passwordfile: /rethinkdb-secret/rethinkdb-password.txt
    backup-cron-schedule: "*/1 * * * *"
    object-prefix: rethinkdb-test
    post-exec-cmds:
    # IMPORTANT: the --directory needs to point to the exact sidecar data dir, otherwise the database will be restored to the wrong location
    - rethinkdb --bind all --directory /data/rethinkdb --initial-password ${RETHINKDB_PASSWORD}
metadata:
  creationTimestamp: null
  name: backup-restore-sidecar-config-rethinkdb
  namespace: test-rethinkdb
---
metadata:
  creationTimestamp: null
  name: rethinkdb
  namespace: test-rethinkdb
stringData:
  rethinkdb-password: test123!
---
metadata:
  creationTimestamp: null
  labels:
    app: rethinkdb
  name: rethinkdb
  namespace: test-rethinkdb
spec:
  ports:
  - name: "10080"
    port: 10080
    targetPort: 10080
  - name: "28015"
    port: 28015
    targetPort: 28015
  - name: metrics
    port: 2112
    targetPort: 2112
  selector:
    app: rethinkdb
status:
  loadBalancer: {}
---
metadata:
  creationTimestamp: null
  labels:
    app: rethinkdb
  name: rethinkdb
  namespace: test-rethinkdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rethinkdb
  serviceName: rethinkdb
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: rethinkdb
    spec:
      containers:
      - command:
        - backup-restore-sidecar
        - wait
        env:
        - name: RETHINKDB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: rethinkdb-password
              name: rethinkdb
        image: rethinkdb:2.4.0
        name: rethinkdb
        ports:
        - containerPort: 8080
        - containerPort: 28015
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: rethinkdb
        - mountPath: /usr/local/bin/backup-restore-sidecar
          name: bin-provision
          subPath: backup-restore-sidecar
        - mountPath: /etc/backup-restore-sidecar
          name: backup-restore-sidecar-config
      - command:
        - backup-restore-sidecar
        - start
        - --log-level=debug
        image: rethinkdb:2.4.0
        name: backup-restore-sidecar
        ports:
        - containerPort: 8000
          name: grpc
        resources: {}
        volumeMounts:
        - mountPath: /backup
          name: backup
        - mountPath: /data
          name: rethinkdb
        - mountPath: /rethinkdb-secret
          name: rethinkdb-credentials
        - mountPath: /etc/backup-restore-sidecar
          name: backup-restore-sidecar-config
        - mountPath: /usr/local/bin/backup-restore-sidecar
          name: bin-provision
          subPath: backup-restore-sidecar
        - mountPath: /usr/local/bin/rethinkdb-dump
          name: bin-provision
          subPath: rethinkdb-dump
        - mountPath: /usr/local/bin/rethinkdb-restore
          name: bin-provision
          subPath: rethinkdb-restore
      initContainers:
      - command:
        - cp
        - /backup-restore-sidecar
        - /rethinkdb/rethinkdb-dump
        - /rethinkdb/rethinkdb-restore
        - /bin-provision
        image: ghcr.io/metal-stack/backup-restore-sidecar:latest
        imagePullPolicy: IfNotPresent
        name: backup-restore-sidecar-provider
        resources: {}
        volumeMounts:
        - mountPath: /bin-provision
          name: bin-provision
      volumes:
      - name: rethinkdb
        persistentVolumeClaim:
          claimName: rethinkdb
      - name: backup
        persistentVolumeClaim:
          claimName: backup
      - name: rethinkdb-credentials
        secret:
          items:
          - key: rethinkdb-password
            path: rethinkdb-password.txt
          secretName: rethinkdb
      - configMap:
          name: backup-restore-sidecar-config-rethinkdb
        name: backup-restore-sidecar-config
      - emptyDir: {}
        name: bin-provision
  updateStrategy: {}
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: rethinkdb
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
    status: {}
  - metadata:
      creationTimestamp: null
      name: backup
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
    status: {}
status:
  availableReplicas: 0
  replicas: 0
